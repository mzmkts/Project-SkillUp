{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mzmkts\\\\Desktop\\\\SkillUp\\\\src\\\\Account\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport '../components/styles/Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!username || !password || !confirmPassword || !email) {\n      setError(t('register.All fields are required'));\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError(t('Passwords do not match'));\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.error || t('Registration failed'));\n        setSuccessMessage('');\n        return;\n      }\n      setSuccessMessage(t('register.Registration successful! Please log in.'));\n      setError('');\n      setUsername('');\n      setPassword('');\n      setConfirmPassword('');\n      setEmail('');\n    } catch (err) {\n      setError(t('register.Network error. Please try again later.'));\n      setSuccessMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: t('register.Register')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: t('Username')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: t('register.Password')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: t('register.Confirm Password')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: t('register.Email')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 27\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green'\n        },\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: t('register.RegisterButton')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '16px'\n        },\n        children: [t('register.Already have an account?'), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: t('register.Go to Login')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"ualVP/jWT8AzE24oGfE8/kRlxVE=\", false, function () {\n  return [useTranslation];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useTranslation","jsxDEV","_jsxDEV","Register","_s","t","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","email","setEmail","error","setError","successMessage","setSuccessMessage","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","style","color","textAlign","marginTop","to","_c","$RefreshReg$"],"sources":["C:/Users/mzmkts/Desktop/SkillUp/src/Account/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport '../components/styles/Register.css';\r\n\r\nexport default function Register() {\r\n    const { t } = useTranslation();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!username || !password || !confirmPassword || !email) {\r\n            setError(t('register.All fields are required'));\r\n            return;\r\n        }\r\n\r\n        if (password !== confirmPassword) {\r\n            setError(t('Passwords do not match'));\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/auth/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ username, email, password })\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                setError(data.error || t('Registration failed'));\r\n                setSuccessMessage('');\r\n                return;\r\n            }\r\n\r\n            setSuccessMessage(t('register.Registration successful! Please log in.'));\r\n            setError('');\r\n            setUsername('');\r\n            setPassword('');\r\n            setConfirmPassword('');\r\n            setEmail('');\r\n\r\n        } catch (err) {\r\n            setError(t('register.Network error. Please try again later.'));\r\n            setSuccessMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <h2>{t('register.Register')}</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"username\">{t('Username')}</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">{t('register.Password')}</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"confirmPassword\">{t('register.Confirm Password')}</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"confirmPassword\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"email\">{t('register.Email')}</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                {error && <p style={{color: 'red'}}>{error}</p>}\r\n                {successMessage && <p style={{color: 'green'}}>{successMessage}</p>}\r\n                <button type=\"submit\">{t('register.RegisterButton')}</button>\r\n\r\n                <div style={{ textAlign: 'center', marginTop: '16px' }}>\r\n                    {t('register.Already have an account?')} <Link to=\"/login\">{t('register.Go to Login')}</Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}